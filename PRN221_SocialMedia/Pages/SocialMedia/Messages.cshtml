@page
@model PRN221_SocialMedia.Pages.SocialMedia.MessagesModel
@{
}

<h2>Messages</h2>

<div class="messaging-container container">
    <div class="row">
        <!-- Sidebar -->
        <div class="sidebar col-md-4">
            <div class="list-group">
                @foreach (var user in Model.Users)
                {
                    <a asp-page="/SocialMedia/Messages" asp-route-userId="@user.Id" class="list-group-item list-group-item-action @(Model.CurrentChatUserId == user.Id ? "active" : "")">
                        <div class="d-flex align-items-center">
                            <img src="@(user.UserProfiles.First().ProfileImage != null ? $"data:image;base64,{Convert.ToBase64String(user.UserProfiles.First().ProfileImage)}" : "/images/default_profile.png")" class="rounded-circle" width="40" height="40" alt="@user.Username" />
                            <span class="ml-3">@user.Username</span>
                        </div>
                    </a>
                }
            </div>
            @*<ul id="userList" class="list-group">
                @foreach (var user in Model.Users)
                {
                    <li class="list-group-item" onclick="loadChat(@user.Id)">
                        <div class="user-info d-flex align-items-center">
                            <img src="data:image/jpeg;base64,@Convert.ToBase64String(user.UserProfiles.First().ProfileImage ?? new byte[0])" class="profile-image rounded-circle" width="40" height="40" />
                            <span>@user.Username</span>
                        </div>
                    </li>
                }
            </ul>*@
        </div>

        <!-- Main chat window -->
        <div class="main col-md-8">
            <div id="chatWindow" class="chat-window">
                @*@if (Model.MessagesWithUser != null)
                {
                    @foreach (var message in Model.MessagesWithUser)
                    {
                        <div class="message @(message.SenderId == Model.LoggedInUserId ? "sent" : "received")">
                            <strong>@message.Sender.Username:</strong> @message.Content
                        </div>
                    }
                }
                else
                {
                    <p>No Message Here.</p>
                }*@

                @if (Model.CurrentChatUserId.HasValue)
                {
                    <div class="chat-header">
                        <h3>@Model.Users.FirstOrDefault(u => u.Id == Model.CurrentChatUserId)?.Username</h3>
                    </div>
                    <div class="chat-messages" id="messagesList">
                        @foreach (var message in Model.MessagesWithUser)
                        {
                            <div class="chat-message @(message.SenderId == Model.LoggedInUserId ? "sent" : "received")">
                                <p>@message.Content</p>
                                <small>@message.SentAt</small>
                            </div>
                        }
                    </div>
@*                    <div class="chat-input">
                        <form method="post">
                            <textarea name="messageContent" class="form-control" rows="3"></textarea>
                            <button type="submit" class="btn btn-primary mt-2">Send</button>
                        </form>
                    </div>*@
                    <div class="chat-input">
                        <textarea id="messageInput" class="form-control" rows="3"></textarea>
                        <button type="button" id="sendButton" class="btn btn-primary mt-2">Send</button>
                    </div>
                }
                else
                {
                    <p>Please select a user to start chatting.</p>
                }
            </div>
        </div>
    </div>
    
</div>

<style>
    .container {
        padding: 20px;
    }

    .list-group-item {
        cursor: pointer;
    }

    .list-group-item .d-flex {
        align-items: center;
    }

    .list-group-item img {
        border-radius: 50%;
    }

    .chat-window {
        border: 1px solid #ddd;
        border-radius: 5px;
        padding: 15px;
        height: 500px;
        display: flex;
        flex-direction: column;
    }

    .chat-header {
        border-bottom: 1px solid #ddd;
        padding-bottom: 10px;
        margin-bottom: 15px;
    }

    .chat-messages {
        flex-grow: 1;
        overflow-y: auto;
    }

    .chat-message {
        padding: 10px;
        margin-bottom: 10px;
        border-radius: 5px;
    }

    .chat-message.sent {
        background-color: #e1ffc7;
        align-self: flex-end;
    }

    .chat-message.received {
        background-color: #f1f1f1;
        align-self: flex-start;
    }

    .chat-input {
        margin-top: 15px;
    }
</style>

@section Scripts {
    <script src="~/microsoft/signalr/dist/browser/signalr.js"></script>
    <script>
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/messageHub")
            .build();

        connection.start().then(function () {
            console.log("SignalR connected");
            const senderId = "@Model.LoggedInUserId";
          
            connection.invoke("SetUserId", senderId).catch(function (err) {
                return console.error(err.toString());
            });
        }).catch(function (err) {
            return console.error(err.toString());
        });

        connection.on("ReceiveMessage", function (senderId, message) {
            console.log("Receive message from senderId: " + senderId + " with message:" + message);
            const msgClass = senderId === "@Model.LoggedInUserId" ? "sent" : "received";
            //const msg = $('<div class="chat-message ' + msgClass + '"></div>').text(message);

            const msg = $('<div class="chat-message sent"></div>');
            const displayMessage = $('<p></p>').text(message);

            const small = $('<small></small>').text(new Date().toLocaleTimeString());
            msg.append(displayMessage);
            msg.append(small);
            $("#messagesList").append(msg);
        });

        $("#sendButton").click(function () {
            
            const message = $("#messageInput").val();
            const senderId = "@Model.LoggedInUserId";
            const receiverId = "@Model.CurrentChatUserId"; // Replace with actual receiver ID

            fetch('/SocialMedia/AddMessage?senderId=' + senderId + '&receiverId=' + receiverId + '&message=' + message, {
                method: 'GET'
            })
            .then(response => response.json())
            .then(result => {
                if (result.success) {
                    console.log("Save new message to DB successful");

                    connection.invoke("SendMessage", senderId, receiverId, message).catch(function (err) {
                        return console.error("SendMessage Error:" + err.toString());
                    });

                    console.log("Sent message with senderId: " + senderId + " and receiverId: " + receiverId + " with message: " + message);

                    // Optionally, append the message immediately to the sender's chat window
                    const msg = $('<div class="chat-message sent"></div>');
                    const displayMessage = $('<p></p>').text(message);
                    const small = $('<small></small>').text(new Date().toLocaleTimeString());
                    msg.append(displayMessage);
                    msg.append(small);
                    $("#messagesList").append(msg);
                    $("#messageInput").val("");
                } else {
                    alert('Failed to add comment');
                }
            });

            //connection.invoke("SendMessage", senderId, receiverId, message).catch(function (err) {
            //    return console.error("SendMessage Error:" + err.toString());
            //});

            //console.log("Sent message with senderId: " + senderId + " and receiverId: " + receiverId + " with message: " + message);

            //// Optionally, append the message immediately to the sender's chat window
            //const msg = $('<div class="chat-message sent"></div>');
            //const displayMessage = $('<p></p>').text(message);
            //const small = $('<small></small>').text(new Date().toLocaleTimeString());
            //msg.append(displayMessage);
            //msg.append(small);
            //$("#messagesList").append(msg);
            //$("#messageInput").val("");
        });
    </script>
}